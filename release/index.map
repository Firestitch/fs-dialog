{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 78df049acb2318010097","webpack:///./configs/fsprompt-confirm.config.ts","webpack:///./configs/fsprompt.config.ts","webpack:///./configs/index.ts","webpack:///./fs-confirm/fs-confirm.component.html","webpack:///./fs-confirm/fs-confirm.component.ts","webpack:///./fs-confirm/index.ts","webpack:///./fs-dialog.module.ts","webpack:///./fs-input/fs-input.component.html","webpack:///./fs-input/fs-input.component.ts","webpack:///./fs-input/index.ts","webpack:///./fs-prompt-autocomplete/fs-prompt-autocomplete.component.html","webpack:///./fs-prompt-autocomplete/fs-prompt-autocomplete.component.ts","webpack:///./fs-prompt-autocomplete/index.ts","webpack:///./fs-prompt-select/fs-prompt-select.component.html","webpack:///./fs-prompt-select/fs-prompt-select.component.ts","webpack:///./fs-prompt-select/index.ts","webpack:///./fsprompt.service.ts","webpack:///./index.ts","webpack:///external \"@angular/common\"","webpack:///external \"@angular/core\"","webpack:///external \"@angular/forms\"","webpack:///external \"@angular/material\"","webpack:///external \"@angular/material/dialog\"","webpack:///external \"rxjs/Observable\"","webpack:///external \"rxjs/add/observable/of\"","webpack:///external \"rxjs/add/operator/switchMap\"","webpack:///external \"rxjs/operators\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/material/dialog\"), require(\"rxjs/add/observable/of\"), require(\"rxjs/add/operator/switchMap\"), require(\"rxjs/Observable\"), require(\"@angular/forms\"), require(\"rxjs/operators\"), require(\"@angular/common\"), require(\"@angular/material\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@firestitch/fs-dialog\", [\"@angular/core\", \"@angular/material/dialog\", \"rxjs/add/observable/of\", \"rxjs/add/operator/switchMap\", \"rxjs/Observable\", \"@angular/forms\", \"rxjs/operators\", \"@angular/common\", \"@angular/material\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@firestitch/fs-dialog\"] = factory(require(\"@angular/core\"), require(\"@angular/material/dialog\"), require(\"rxjs/add/observable/of\"), require(\"rxjs/add/operator/switchMap\"), require(\"rxjs/Observable\"), require(\"@angular/forms\"), require(\"rxjs/operators\"), require(\"@angular/common\"), require(\"@angular/material\"));\n\telse\n\t\troot[\"@firestitch/fs-dialog\"] = factory(root[\"@angular/core\"], root[\"@angular/material/dialog\"], root[\"rxjs/add/observable/of\"], root[\"rxjs/add/operator/switchMap\"], root[\"rxjs/Observable\"], root[\"@angular/forms\"], root[\"rxjs/operators\"], root[\"@angular/common\"], root[\"@angular/material\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__angular_core__, __WEBPACK_EXTERNAL_MODULE__angular_material_dialog__, __WEBPACK_EXTERNAL_MODULE_rxjs_add_observable_of__, __WEBPACK_EXTERNAL_MODULE_rxjs_add_operator_switchMap__, __WEBPACK_EXTERNAL_MODULE_rxjs_Observable__, __WEBPACK_EXTERNAL_MODULE__angular_forms__, __WEBPACK_EXTERNAL_MODULE_rxjs_operators__, __WEBPACK_EXTERNAL_MODULE__angular_common__, __WEBPACK_EXTERNAL_MODULE__angular_material__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.ts\");\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 78df049acb2318010097","import { FsPromptConfig } from './fsprompt.config';\r\nimport { IFsPromptConfig } from '../interfaces';\r\n\r\nexport class FsPromptConfirmConfig<T> extends FsPromptConfig<T> {\r\n\r\n  protected applyConfig(config) {\r\n    super.applyConfig(config);\r\n\r\n    if (!config.title) {\r\n      config.title = 'Confirm';\r\n    }\r\n\r\n    if (!config.class) {\r\n      config.class = 'fs-modal-confirm'\r\n    }\r\n  }\r\n\r\n  protected applyDialogConfig(config: IFsPromptConfig) {\r\n    super.applyDialogConfig(config);\r\n    const inputDialogConfig = config.dialogConfig;\r\n    // Confrim has small width by default than other types\r\n    if (!inputDialogConfig || inputDialogConfig.width === void 0) {\r\n      this._dialogConfig.width = '250px';\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./configs/fsprompt-confirm.config.ts","import { MatDialogConfig } from '@angular/material';\r\nimport { FsValuesFunction } from '../interfaces';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IFsPromptConfig } from '../interfaces';\r\nimport { PromptType } from '../fsprompt.service';\r\n\r\n\r\nexport class FsPromptConfig<T> {\r\n  public title = '';\r\n  public template = '';\r\n  public hint = '';\r\n  public label = '';\r\n  public class = '';\r\n  public commitLabel = 'Ok';\r\n  public cancelLabel = 'Cancel';\r\n  public values: Observable<T> | Promise<T> | T[] | FsValuesFunction = [];\r\n\r\n  protected _dialogConfig: MatDialogConfig;\r\n\r\n\r\n  protected _defaultDialogConfig = {\r\n    width: '500px',\r\n    heigth: 'auto'\r\n  };\r\n\r\n  constructor(\r\n    public config: IFsPromptConfig,\r\n  ) {\r\n    this.applyDialogConfig(config);\r\n    this.applyConfig(config);\r\n  }\r\n\r\n  get dialogConfig() {\r\n\r\n    let config = Object.assign({}, this._dialogConfig);\r\n    config.data = {\r\n      title: this.title,\r\n      template: this.template,\r\n      hint: this.hint,\r\n      label: this.label,\r\n      class: this.class,\r\n      commitLabel: this.commitLabel,\r\n      cancelLabel: this.cancelLabel,\r\n      values: this.values\r\n    };\r\n\r\n    return config\r\n  }\r\n\r\n  protected applyConfig(config: IFsPromptConfig) {\r\n    Object.assign(this, config);\r\n  }\r\n\r\n  protected applyDialogConfig(config: IFsPromptConfig) {\r\n    const inputDialogConfig = config.dialogConfig;\r\n\r\n    // Previously let's assign default config\r\n    this._dialogConfig = Object.assign({}, this._defaultDialogConfig);\r\n\r\n    // Then assign passed config\r\n    if (inputDialogConfig) {\r\n      Object.assign(this._dialogConfig, inputDialogConfig);\r\n    }\r\n\r\n    // Assign panel class (class for modal container) only if we don't have this class in modal options\r\n    if (config.class) {\r\n      this._dialogConfig.panelClass = config.class;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./configs/fsprompt.config.ts","export * from './fsprompt.config';\r\nexport * from './fsprompt-confirm.config';\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./configs/index.ts","module.exports = \"<h2 mat-dialog-title>{{data.title}}</h2>\\r\\n<mat-dialog-content tabindex=\\\"-1\\\">\\r\\n  {{data.template}}\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions align=\\\"end\\\">\\r\\n  <button mat-button [mat-dialog-close]=\\\"false\\\">{{data.cancelLabel}}</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"true\\\">{{data.commitLabel}}</button>\\r\\n</mat-dialog-actions>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./fs-confirm/fs-confirm.component.html\n// module id = ./fs-confirm/fs-confirm.component.html\n// module chunks = 0","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'fs-confirm',\r\n  template: require('./fs-confirm.component.html'),\r\n})\r\nexport class FsConfirmComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FsConfirmComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./fs-confirm/fs-confirm.component.ts","export * from './fs-confirm.component';\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./fs-confirm/index.ts","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// Material\r\nimport {\r\n  MatButtonModule,\r\n  MatDialogModule,\r\n  MatInputModule,\r\n  MatSelectModule,\r\n  MatFormFieldModule,\r\n  MatAutocompleteModule,\r\n} from '@angular/material';\r\n\r\n// Dialog\r\nimport { FsConfirmComponent } from './fs-confirm';\r\nimport { FsInputComponent } from './fs-input';\r\nimport { FsPromptSelectComponent } from './fs-prompt-select';\r\nimport { FsPrompt } from './fsprompt.service';\r\nimport { FsPromptAutocompleteComponent } from './fs-prompt-autocomplete';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    // Angular\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n    // Material\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatAutocompleteModule,\r\n  ],\r\n  entryComponents: [\r\n    FsConfirmComponent,\r\n    FsInputComponent,\r\n    FsPromptSelectComponent,\r\n    FsPromptAutocompleteComponent,\r\n  ],\r\n  declarations: [\r\n    FsConfirmComponent,\r\n    FsInputComponent,\r\n    FsPromptSelectComponent,\r\n    FsPromptAutocompleteComponent,\r\n  ],\r\n  providers: [\r\n    FsPrompt,\r\n  ],\r\n})\r\nexport class FsDialogModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: FsDialogModule,\r\n      providers: [FsPrompt]\r\n    };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./fs-dialog.module.ts","module.exports = \"<h2 mat-dialog-title>{{data.title}}</h2>\\r\\n<mat-dialog-content tabindex=\\\"-1\\\">\\r\\n  {{data.template}}\\r\\n  <mat-form-field>\\r\\n    <input matInput [placeholder]=\\\"data.label\\\" [(ngModel)]=\\\"inputValue\\\">\\r\\n    <mat-hint>{{data.hint}}</mat-hint>\\r\\n  </mat-form-field>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions align=\\\"end\\\">\\r\\n  <button mat-button [mat-dialog-close]=\\\"false\\\">{{data.cancelLabel}}</button>\\r\\n  <button mat-button (click)=\\\"complete()\\\">{{data.commitLabel}}</button>\\r\\n</mat-dialog-actions>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./fs-input/fs-input.component.html\n// module id = ./fs-input/fs-input.component.html\n// module chunks = 0","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'fs-input',\r\n  template: require('./fs-input.component.html'),\r\n  styles: [ require('../fsprompt.scss') ],\r\n})\r\nexport class FsInputComponent {\r\n\r\n  public inputValue = '';\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FsInputComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n  }\r\n\r\n  public complete() {\r\n    this.dialogRef.close(this.inputValue);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./fs-input/fs-input.component.ts","export * from './fs-input.component';\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./fs-input/index.ts","module.exports = \"<h2 mat-dialog-title>{{data.title}}</h2>\\r\\n<mat-dialog-content tabindex=\\\"-1\\\">\\r\\n  {{data.template}}\\r\\n\\r\\n  <mat-form-field *ngIf=\\\"!loading && !error\\\">\\r\\n    <input aria-label=\\\"State\\\" matInput\\r\\n           [placeholder]=\\\"data.label\\\"\\r\\n           [matAutocomplete]=\\\"auto\\\"\\r\\n           [value]=\\\"inputControl\\\"\\r\\n           [formControl]=\\\"inputControl\\\">\\r\\n    <mat-autocomplete #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayWith\\\" (optionSelected)=\\\"setSelectedValue($event)\\\">\\r\\n      <mat-option *ngFor=\\\"let item of filteredItems | async\\\" [value]=\\\"item\\\">\\r\\n        <small>{{item.name}}</small>\\r\\n      </mat-option>\\r\\n    </mat-autocomplete>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <ng-container *ngIf=\\\"loading\\\">Please wait...</ng-container>\\r\\n  <ng-container *ngIf=\\\"error\\\">Something went wrong. Please, try again</ng-container>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions align=\\\"end\\\">\\r\\n  <button mat-button [mat-dialog-close]=\\\"false\\\">{{data.cancelLabel}}</button>\\r\\n  <button mat-button (click)=\\\"complete()\\\" *ngIf=\\\"!error && !loading\\\">{{data.commitLabel}}</button>\\r\\n</mat-dialog-actions>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./fs-prompt-autocomplete/fs-prompt-autocomplete.component.html\n// module id = ./fs-prompt-autocomplete/fs-prompt-autocomplete.component.html\n// module chunks = 0","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FsPrompt, ConverterType } from '../fsprompt.service';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { startWith, map } from 'rxjs/operators';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'fs-prompt-autocomplete',\r\n  template: require('./fs-prompt-autocomplete.component.html'),\r\n  styles: [ require('../fsprompt.scss') ],\r\n})\r\nexport class FsPromptAutocompleteComponent implements OnInit {\r\n\r\n  public inputControl = new FormControl('', []);\r\n  public filteredItems: Observable<any[]>;\r\n  public result;\r\n  public loading = false;\r\n  public items = [];\r\n  public error = false;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FsPromptAutocompleteComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadItems();\r\n\r\n    this.filteredItems = this.inputControl.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map((item: any) => typeof item === 'string' ? item : item.name),\r\n        map(item => item ? this.filterItems(item) : this.items.slice())\r\n      );\r\n  }\r\n\r\n  public complete() {\r\n    this.dialogRef.close(this.result);\r\n  }\r\n\r\n  public setSelectedValue(event: MatAutocompleteSelectedEvent) {\r\n    if (event) {\r\n      this.result = event.option.value.value;\r\n    }\r\n  }\r\n\r\n  public displayWith(value) {\r\n    return value ? value.name : undefined;\r\n  }\r\n\r\n  /**\r\n   * Load items depend from values type\r\n   */\r\n  private loadItems() {\r\n    let result = FsPrompt.valuesConverter(this.data.values);\r\n\r\n    switch (result.type) {\r\n      case ConverterType.observable: {\r\n        this.loading = true;\r\n        result.values.subscribe((response) => {\r\n          this.items = response;\r\n          this.loading = false;\r\n        }, () => {\r\n          this.error = true;\r\n          this.loading = false;\r\n        })\r\n      } break;\r\n\r\n      case ConverterType.promise: {\r\n        this.loading = true;\r\n        result.values.then((response) => {\r\n          this.items = response;\r\n          this.loading = false;\r\n        }, () => {\r\n          this.error = true;\r\n          this.loading = false;\r\n        })\r\n      } break;\r\n\r\n      case ConverterType.array: {\r\n        this.items = this.data.values;\r\n      } break;\r\n\r\n      default: {\r\n        this.error = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Filter items by name\r\n   * @param {string} name\r\n   * @returns {any[]}\r\n   */\r\n  private filterItems(name: string) {\r\n    return this.items.filter(item =>\r\n      item.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./fs-prompt-autocomplete/fs-prompt-autocomplete.component.ts","export * from './fs-prompt-autocomplete.component';\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./fs-prompt-autocomplete/index.ts","module.exports = \"<h2 mat-dialog-title>{{data.title}}</h2>\\r\\n<mat-dialog-content tabindex=\\\"-1\\\">\\r\\n  {{data.template}}\\r\\n  <mat-form-field *ngIf=\\\"!loading && !error\\\">\\r\\n    <mat-select [placeholder]=\\\"data.label\\\" [(value)]=\\\"result\\\">\\r\\n      <mat-option *ngFor=\\\"let item of items\\\" [value]=\\\"item.value\\\">\\r\\n        {{ item.name }}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n    <mat-hint>{{data.hint}}</mat-hint>\\r\\n  </mat-form-field>\\r\\n  <ng-container *ngIf=\\\"loading\\\">Please wait...</ng-container>\\r\\n  <ng-container *ngIf=\\\"error\\\">Something went wrong. Please, try again</ng-container>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions align=\\\"end\\\">\\r\\n  <button mat-button [mat-dialog-close]=\\\"false\\\">{{data.cancelLabel}}</button>\\r\\n  <button mat-button (click)=\\\"complete()\\\" *ngIf=\\\"!error && !loading\\\">{{data.commitLabel}}</button>\\r\\n</mat-dialog-actions>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./fs-prompt-select/fs-prompt-select.component.html\n// module id = ./fs-prompt-select/fs-prompt-select.component.html\n// module chunks = 0","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FsPrompt, ConverterType } from '../fsprompt.service';\r\n\r\n@Component({\r\n  selector: 'fs-prompt-select',\r\n  template: require('./fs-prompt-select.component.html'),\r\n  styles: [ require('../fsprompt.scss') ],\r\n})\r\nexport class FsPromptSelectComponent implements OnInit {\r\n\r\n  public result;\r\n  public loading = false;\r\n  public items = [];\r\n  public error = false;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FsPromptSelectComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadItems();\r\n  }\r\n\r\n  public complete() {\r\n    this.dialogRef.close(this.result);\r\n  }\r\n\r\n  private loadItems() {\r\n    let result = FsPrompt.valuesConverter(this.data.values);\r\n\r\n    switch (result.type) {\r\n      case ConverterType.observable: {\r\n        this.loading = true;\r\n        result.values.subscribe((response) => {\r\n          this.items = response;\r\n          this.loading = false;\r\n        }, () => {\r\n          this.error = true;\r\n          this.loading = false;\r\n        })\r\n      } break;\r\n\r\n      case ConverterType.promise: {\r\n        this.loading = true;\r\n        result.values.then((response) => {\r\n          this.items = response;\r\n          this.loading = false;\r\n        }, () => {\r\n          this.error = true;\r\n          this.loading = false;\r\n        })\r\n      } break;\r\n\r\n      case ConverterType.array: {\r\n        this.items = this.data.values;\r\n      } break;\r\n\r\n      default: {\r\n        this.error = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./fs-prompt-select/fs-prompt-select.component.ts","export * from './fs-prompt-select.component';\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./fs-prompt-select/index.ts","import {\r\n  Injectable,\r\n} from '@angular/core';\r\n\r\n// Modal\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { IFsPromptConfig, FsValuesFunction } from './interfaces';\r\n\r\n// Components for open in modal\r\nimport { FsConfirmComponent } from './fs-confirm/fs-confirm.component';\r\nimport { FsInputComponent } from './fs-input/fs-input.component';\r\nimport { FsPromptSelectComponent } from './fs-prompt-select/fs-prompt-select.component';\r\nimport { FsPromptAutocompleteComponent } from './fs-prompt-autocomplete/fs-prompt-autocomplete.component';\r\n\r\n// Configs\r\nimport { FsPromptConfig } from './configs/fsprompt.config';\r\nimport { FsPromptConfirmConfig } from './configs/fsprompt-confirm.config';\r\n\r\n// RX\r\nimport 'rxjs/add/observable/of';\r\nimport 'rxjs/add/operator/switchMap';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nexport enum PromptType {\r\n  confirm = 0,\r\n  input = 1,\r\n  select = 2,\r\n  autocomplete = 3\r\n}\r\n\r\nexport enum ConverterType {\r\n  observable = 0,\r\n  promise = 1,\r\n  array = 2\r\n}\r\n\r\n@Injectable()\r\nexport class FsPrompt {\r\n\r\n  /**\r\n   * Values converter\r\n   *\r\n   * @param {Observable<T> | Promise<T> | Array<T> | FsValuesFunction} values\r\n   * @returns {any}\r\n   */\r\n  static valuesConverter<T>(values: Observable<T> | Promise<T> | Array<T> | FsValuesFunction) {\r\n    const nativeObjectToString = Object.prototype.toString;\r\n\r\n    if (nativeObjectToString.call(values) === '[object Function]') { // check if it Function\r\n      return this.valuesConverter((values as Function)())\r\n    } else {\r\n      if (values instanceof Observable) { // check if it Observable\r\n        return {\r\n          type: ConverterType.observable,\r\n          values: values\r\n        }\r\n      } else if (!!values && (typeof values === 'object' || typeof values === 'function') // check if it Promise\r\n        && typeof (values as Promise<T>).then === 'function') {\r\n        return {\r\n          type: ConverterType.promise,\r\n          values: values\r\n        }\r\n      } else if (Array.isArray(values)) { // check if it Array\r\n        return {\r\n          type: ConverterType.array,\r\n          values: values\r\n        }\r\n      } else { // if we can't detect type\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  constructor(private dialog: MatDialog) {}\r\n\r\n  /**\r\n   * Open confirmation window and return close observable\r\n   *\r\n   * @param {IFsPromptConfig} config\r\n   * @returns {Observable<any>}\r\n   */\r\n  public confirm(config: IFsPromptConfig = {}) {\r\n    const openConfig = new FsPromptConfirmConfig(config);\r\n\r\n    return this.open(openConfig, PromptType.confirm);\r\n  }\r\n\r\n  /**\r\n   * Open window with input field for filling\r\n   *\r\n   * @param {IFsPromptConfig} config\r\n   * @returns {Observable<any> | boolean}\r\n   */\r\n  public input(config: IFsPromptConfig = {}) {\r\n    const openConfig = new FsPromptConfig(config);\r\n\r\n    return this.open(openConfig, PromptType.input);\r\n  }\r\n\r\n  /**\r\n   * Open modal with list\r\n   *\r\n   * @param {IFsPromptConfig} config\r\n   */\r\n  public select(config: IFsPromptConfig = {}) {\r\n    const openConfig = new FsPromptConfig(config);\r\n\r\n    return this.open(openConfig, PromptType.select);\r\n  }\r\n\r\n  /**\r\n   * Open modal with autocomplete\r\n   *\r\n   * @param {IFsPromptConfig} config\r\n   * @returns {Observable<any> | boolean}\r\n   */\r\n  public autocomplete(config: IFsPromptConfig = {}) {\r\n    const openConfig = new FsPromptConfig(config);\r\n\r\n    return this.open(openConfig, PromptType.autocomplete);\r\n  }\r\n\r\n  /**\r\n   * Open modal dialog depends from type\r\n   *\r\n   * @param {IFsPromptConfig} config\r\n   * @param {PromptType} type\r\n   * @returns {any}\r\n   */\r\n  private open(config: FsPromptConfig<any> | FsPromptConfirmConfig<any>, type: PromptType) {\r\n\r\n    switch (type) {\r\n      case PromptType.confirm: {\r\n        return this.dialog.open(FsConfirmComponent, config.dialogConfig).afterClosed()\r\n          .switchMap((value) => (value) ? Observable.of(value) : Observable.throw('error'));\r\n      }\r\n\r\n      case PromptType.input: {\r\n        return this.dialog.open(FsInputComponent, config.dialogConfig).afterClosed();\r\n      }\r\n\r\n      case PromptType.select: {\r\n        return this.dialog.open(FsPromptSelectComponent, config.dialogConfig).afterClosed();\r\n      }\r\n\r\n      case PromptType.autocomplete: {\r\n        return this.dialog.open(FsPromptAutocompleteComponent, config.dialogConfig).afterClosed();\r\n      }\r\n\r\n      default: return Observable.throw('Erorr')\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./fsprompt.service.ts","export * from './fs-dialog.module';\r\nexport * from './configs';\r\nexport * from './fs-confirm';\r\nexport * from './fs-input';\r\nexport * from './fs-prompt-autocomplete';\r\nexport * from './fs-prompt-select';\r\nexport * from './fsprompt.service';\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./index.ts","module.exports = __WEBPACK_EXTERNAL_MODULE__angular_common__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/common\"\n// module id = @angular/common\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE__angular_core__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = @angular/core\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE__angular_forms__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/forms\"\n// module id = @angular/forms\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE__angular_material__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/material\"\n// module id = @angular/material\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE__angular_material_dialog__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/material/dialog\"\n// module id = @angular/material/dialog\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs_Observable__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/Observable\"\n// module id = rxjs/Observable\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs_add_observable_of__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/add/observable/of\"\n// module id = rxjs/add/observable/of\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs_add_operator_switchMap__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/add/operator/switchMap\"\n// module id = rxjs/add/operator/switchMap\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs_operators__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/operators\"\n// module id = rxjs/operators\n// module chunks = 0"],"sourceRoot":""}